/*
	Generated by Entice Designer
	Entice Designer written by Christopher E. Miller
	www.dprogramming.com/entice.php
*/
module src.gui.taskconfigform;
import dfl.all;

import std.array, std.format, std.datetime;
import voile.misc;
import src.sys.task;

/*******************************************************************************
 * 
 */
class TaskConfigForm: dfl.form.Form
{
	// Do not modify or move this block of variables.
	//~Entice Designer variables begin here.
	dfl.label.Label lblTaskName;
	dfl.textbox.TextBox txtTaskName;
	dfl.label.Label lblStartTime;
	dfl.textbox.TextBox txtStartTime;
	dfl.panel.Panel panel1;
	dfl.panel.Panel panel2;
	dfl.panel.Panel panel3;
	dfl.button.Button btnOk;
	dfl.panel.Panel panel4;
	dfl.button.Button btnApply;
	dfl.panel.Panel panel5;
	dfl.button.Button btnCancel;
	//~Entice Designer variables end here.
	
	Task _task;
	
	
	/***************************************************************************
	 * 
	 */
	Handler!(void delegate()) onConfigApplied;
	
	
	/***************************************************************************
	 * 
	 */
	void task(Task src) @property
	{
		_task = src;
		txtTaskName.text = _task.name;
		auto app = appender!string();
		formattedWrite(app, "%04d/%02d/%02d[%02d:%02d:%02d.%03d]",
			_task.startTime.year,
			_task.startTime.month,
			_task.startTime.day,
			_task.startTime.hour,
			_task.startTime.minute,
			_task.startTime.second,
			_task.startTime.fracSec.msecs);
		txtStartTime.text = app.data;
	}
	
	/// ditto
	Task task() @property
	{
		auto t = _task;
		t.name = txtTaskName.text;
		return t;
	}
	
	/***************************************************************************
	 * 
	 */
	this()
	{
		initializeTaskConfigForm();
		
		//@  Other TaskConfigForm initialization code here.
		
		// 時間入力した時
		txtStartTime.lostFocus ~= (Object s, EventArgs e)
		{
			import std.regex;
			auto r = regex(r"^\d{4}/\d{2}/\d{2}\[\d{2}:\d{2}:\d{2}\.\d{3}\]$");
			auto m = match(txtStartTime.text, r);
			if (m)
			{
				auto timestr = txtStartTime.text;
				int task_startTime_year;
				int task_startTime_month;
				int task_startTime_day;
				int task_startTime_hour;
				int task_startTime_minute;
				int task_startTime_second;
				int task_startTime_fracSec_msecs;
				formattedRead(timestr, "%s/%s/%s[%s:%s:%s.%s]",
					&task_startTime_year,
					&task_startTime_month,
					&task_startTime_day,
					&task_startTime_hour,
					&task_startTime_minute,
					&task_startTime_second,
					&task_startTime_fracSec_msecs);
				auto dt = DateTime(
					task_startTime_year,
					task_startTime_month,
					task_startTime_day,
					task_startTime_hour,
					task_startTime_minute,
					task_startTime_second);
				auto fs = FracSec.from!"msecs"(task_startTime_fracSec_msecs);
				_task.startTime = SysTime(dt, fs);
			}
			else
			{
				auto app = appender!string();
				formattedWrite(app, "%04d/%02d/%02d[%02d:%02d:%02d.%03d]",
					_task.startTime.year,
					_task.startTime.month,
					_task.startTime.day,
					_task.startTime.hour,
					_task.startTime.minute,
					_task.startTime.second,
					_task.startTime.fracSec.msecs);
				txtStartTime.text = app.data;
			}
		};
		
		// 表示変更時
		visibleChanged ~= (Object s, EventArgs e)
		{
			if (visible)
			{
				btnCancel.notifyDefault(false);
				btnApply.notifyDefault(false);
				btnOk.notifyDefault(true);
				txtTaskName.focus();
				txtTaskName.selectAll();
			}
		};
		
		// テキストボックスでEnterが押された時の挙動
		void onTboxEnterKey(Object s, KeyPressEventArgs e)
		{
			if(e.keyCode == Keys.ENTER)
			{
				btnOk.focus();
				btnOk.performClick();
				e.handled = true;
			}
		}
		txtTaskName.keyPress  ~= &onTboxEnterKey;
		txtStartTime.keyPress ~= &onTboxEnterKey;
		
		
		// ボタン上でEnterキー
		void onBtnEnterKey(Control c, KeyPressEventArgs e)
		{
			auto btn = cast(Button)c;
			if (btn && e.keyCode == Keys.ENTER)
			{
				btn.performClick();
			}
		}
		btnOk.keyPress     ~= &onBtnEnterKey;
		btnApply.keyPress  ~= &onBtnEnterKey;
		btnCancel.keyPress ~= &onBtnEnterKey;
		
		
		// OK時の挙動
		btnOk.click ~= (Object s, EventArgs e)
		{
			onConfigApplied();
			hide();
		};
		
		// 適用時の挙動
		btnApply.click ~= (Object s, EventArgs e)
		{
			onConfigApplied();
		};
		
		// キャンセル時の挙動
		btnCancel.click ~= (Object s, EventArgs e)
		{
			hide();
		};
		
		// 閉じられるときの挙動
		closing ~= (Object s, CancelEventArgs e)
		{
			hide();
			e.cancel = true;
		};
	}
	
	private void initializeTaskConfigForm()
	{
		// Do not manually modify this function.
		//~Entice Designer 0.8.5.02 code begins here.
		//~DFL Form
		text = "Task Config Form";
		clientSize = dfl.all.Size(390, 187);
		//~DFL dfl.label.Label=lblTaskName
		lblTaskName = new dfl.label.Label();
		lblTaskName.name = "lblTaskName";
		lblTaskName.dock = dfl.all.DockStyle.TOP;
		lblTaskName.text = "タスク名";
		lblTaskName.bounds = dfl.all.Rect(0, 0, 390, 24);
		lblTaskName.parent = this;
		//~DFL dfl.textbox.TextBox=txtTaskName
		txtTaskName = new dfl.textbox.TextBox();
		txtTaskName.name = "txtTaskName";
		txtTaskName.dock = dfl.all.DockStyle.TOP;
		txtTaskName.bounds = dfl.all.Rect(0, 24, 390, 24);
		txtTaskName.parent = this;
		//~DFL dfl.label.Label=lblStartTime
		lblStartTime = new dfl.label.Label();
		lblStartTime.name = "lblStartTime";
		lblStartTime.dock = dfl.all.DockStyle.TOP;
		lblStartTime.text = "開始時刻";
		lblStartTime.bounds = dfl.all.Rect(0, 48, 390, 18);
		lblStartTime.parent = this;
		//~DFL dfl.textbox.TextBox=txtStartTime
		txtStartTime = new dfl.textbox.TextBox();
		txtStartTime.name = "txtStartTime";
		txtStartTime.dock = dfl.all.DockStyle.TOP;
		txtStartTime.text = "00:00:00.000";
		txtStartTime.bounds = dfl.all.Rect(0, 66, 390, 24);
		txtStartTime.parent = this;
		//~DFL dfl.panel.Panel=panel1
		panel1 = new dfl.panel.Panel();
		panel1.name = "panel1";
		panel1.dock = dfl.all.DockStyle.TOP;
		panel1.bounds = dfl.all.Rect(0, 90, 390, 24);
		panel1.parent = this;
		//~DFL dfl.panel.Panel=panel2
		panel2 = new dfl.panel.Panel();
		panel2.name = "panel2";
		panel2.dock = dfl.all.DockStyle.TOP;
		panel2.bounds = dfl.all.Rect(0, 130, 390, 24);
		panel2.parent = this;
		//~DFL dfl.panel.Panel=panel3
		panel3 = new dfl.panel.Panel();
		panel3.name = "panel3";
		panel3.dock = dfl.all.DockStyle.RIGHT;
		panel3.bounds = dfl.all.Rect(134, 0, 256, 24);
		panel3.parent = panel2;
		//~DFL dfl.button.Button=btnOk
		btnOk = new dfl.button.Button();
		btnOk.name = "btnOk";
		btnOk.dock = dfl.all.DockStyle.LEFT;
		btnOk.text = "OK";
		btnOk.bounds = dfl.all.Rect(0, 0, 64, 24);
		btnOk.parent = panel3;
		//~DFL dfl.panel.Panel=panel4
		panel4 = new dfl.panel.Panel();
		panel4.name = "panel4";
		panel4.dock = dfl.all.DockStyle.LEFT;
		panel4.bounds = dfl.all.Rect(64, 0, 16, 24);
		panel4.parent = panel3;
		//~DFL dfl.button.Button=btnApply
		btnApply = new dfl.button.Button();
		btnApply.name = "btnApply";
		btnApply.dock = dfl.all.DockStyle.LEFT;
		btnApply.text = "適用";
		btnApply.bounds = dfl.all.Rect(80, 0, 64, 24);
		btnApply.parent = panel3;
		//~DFL dfl.panel.Panel=panel5
		panel5 = new dfl.panel.Panel();
		panel5.name = "panel5";
		panel5.dock = dfl.all.DockStyle.LEFT;
		panel5.bounds = dfl.all.Rect(144, 0, 16, 24);
		panel5.parent = panel3;
		//~DFL dfl.button.Button=btnCancel
		btnCancel = new dfl.button.Button();
		btnCancel.name = "btnCancel";
		btnCancel.dock = dfl.all.DockStyle.LEFT;
		btnCancel.text = "キャンセル";
		btnCancel.bounds = dfl.all.Rect(160, 0, 64, 24);
		btnCancel.parent = panel3;
		//~Entice Designer 0.8.5.02 code ends here.
	}
}

